"use strict";

const db = require("../db");
const { BadRequestError, NotFoundError } = require("../expressError");

/** Related functions for quiz_instances */

class QuizInstance {
    /**Create a new quiz instance in the database.
     * 
     * Returns { id, createdAt }
     */
    static async create() {
        // Check for duplicates (though UUIDs should be unique)
        const duplicateCheck = await db.query(
            `SELECT id
             FROM quiz_instances
             WHERE id = $1`,
            [uuidv4()] //This is just a placeholder. The real uuid is generated by the DB.
        );

        if (duplicateCheck.rows[0]) {
            throw new BadRequestError(`Duplicate quiz instance detected.`);
        }

        const result = await db.query(
            `INSERT INTO quiz_instances (created_at)
             VALUES (CURRENT_TIMESTAMP) 
             RETURNING id, created_at AS "createdAt"`
        );
        const quizInstance = result.rows[0];
        return quizInstance;
    }

    /**Find all quiz instances */
    static async findAll() {
        const result = await db.query(
            `SELECT id, created_at AS "createdAt"
             FROM quiz_instances`
        );
        return result.rows;
    }

    /**Find a quiz instance by ID
     * 
     * Returns { id, createdAt }
     * 
     * Throws NotFoundError if quiz instance not found.
     */
    static async get(id) {
        const result = await db.query(
            `SELECT id, created_at AS "createdAt"
             FROM quiz_instances
             WHERE id = $1`,
            [id]
        );
        const quizInstance = result.rows[0];

        if (!quizInstance) throw new NotFoundError(`No quiz instance found: ${id}`);

        return quizInstance;
    }

    /**Update a quiz instance by ID
     * 
     * Updates `created_at` to the current timestamp.
     * 
     * Returns { id, createdAt }
     * 
     * Throws NotFoundError if quiz instance not found.
     */
    static async update(id) {
        const result = await db.query(
            `UPDATE quiz_instances
             SET created_at = CURRENT_TIMESTAMP
             WHERE id = $1
             RETURNING id, created_at AS "createdAt"`,
            [id]
        );
        const quizInstance = result.rows[0];

        if (!quizInstance) throw new NotFoundError(`No quiz instance found: ${id}`);

        return quizInstance;
    }

    /**Delete a quiz instance by ID
     * 
     * Returns a confirmation message.
     * 
     * Throws NotFoundError if quiz instance not found.
     */
    static async remove(id) {
        const result = await db.query(
            `DELETE FROM quiz_instances
             WHERE id = $1
             RETURNING id`,
            [id]
        );
        const quizInstance = result.rows[0];

        if (!quizInstance) throw new NotFoundError(`No quiz instance found: ${id}`);

        return { message: `Quiz instance ${id} deleted.` };
    }
}

module.exports = QuizInstance;
